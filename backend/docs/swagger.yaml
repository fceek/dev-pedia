basePath: /
definitions:
  fceek_dev-pedia_backend_internal_models.Article:
    properties:
      classification_level:
        type: integer
      content:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      full_path:
        type: string
      id:
        type: string
      metadata:
        $ref: '#/definitions/fceek_dev-pedia_backend_internal_models.ArticleMetadata'
      parent_path:
        type: string
      slug:
        type: string
      source_type:
        $ref: '#/definitions/fceek_dev-pedia_backend_internal_models.ArticleSourceType'
      status:
        $ref: '#/definitions/fceek_dev-pedia_backend_internal_models.ArticleStatus'
      title:
        type: string
      updated_at:
        type: string
      updated_by:
        type: string
    type: object
  fceek_dev-pedia_backend_internal_models.ArticleListResponse:
    properties:
      articles:
        items:
          $ref: '#/definitions/fceek_dev-pedia_backend_internal_models.ArticleWithTags'
        type: array
      page:
        type: integer
      page_size:
        type: integer
      total:
        type: integer
    type: object
  fceek_dev-pedia_backend_internal_models.ArticleMetadata:
    additionalProperties: true
    type: object
  fceek_dev-pedia_backend_internal_models.ArticleSourceType:
    enum:
    - doc
    - git
    type: string
    x-enum-varnames:
    - ArticleSourceDoc
    - ArticleSourceGit
  fceek_dev-pedia_backend_internal_models.ArticleStatus:
    enum:
    - draft
    - published
    - archived
    type: string
    x-enum-varnames:
    - ArticleStatusDraft
    - ArticleStatusPublished
    - ArticleStatusArchived
  fceek_dev-pedia_backend_internal_models.ArticleTag:
    properties:
      color:
        type: string
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  fceek_dev-pedia_backend_internal_models.ArticleWithTags:
    properties:
      classification_level:
        type: integer
      content:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      full_path:
        type: string
      id:
        type: string
      metadata:
        $ref: '#/definitions/fceek_dev-pedia_backend_internal_models.ArticleMetadata'
      parent_path:
        type: string
      slug:
        type: string
      source_type:
        $ref: '#/definitions/fceek_dev-pedia_backend_internal_models.ArticleSourceType'
      status:
        $ref: '#/definitions/fceek_dev-pedia_backend_internal_models.ArticleStatus'
      tags:
        items:
          $ref: '#/definitions/fceek_dev-pedia_backend_internal_models.ArticleTag'
        type: array
      title:
        type: string
      updated_at:
        type: string
      updated_by:
        type: string
    type: object
  fceek_dev-pedia_backend_internal_models.CreateArticleRequest:
    properties:
      classification_level:
        maximum: 5
        minimum: 1
        type: integer
      content:
        type: string
      full_path:
        type: string
      metadata:
        $ref: '#/definitions/fceek_dev-pedia_backend_internal_models.ArticleMetadata'
      parent_path:
        type: string
      secrets:
        description: 'New: secrets to create with article'
        items:
          $ref: '#/definitions/fceek_dev-pedia_backend_internal_models.CreateContentSecretRequest'
        type: array
      slug:
        maxLength: 100
        type: string
      source_type:
        allOf:
        - $ref: '#/definitions/fceek_dev-pedia_backend_internal_models.ArticleSourceType'
        enum:
        - doc
        - git
      status:
        allOf:
        - $ref: '#/definitions/fceek_dev-pedia_backend_internal_models.ArticleStatus'
        enum:
        - draft
        - published
        - archived
      tag_ids:
        items:
          type: string
        type: array
      title:
        maxLength: 200
        type: string
    required:
    - classification_level
    - content
    - full_path
    - source_type
    - title
    type: object
  fceek_dev-pedia_backend_internal_models.CreateContentSecretRequest:
    properties:
      classification_level:
        maximum: 5
        minimum: 2
        type: integer
      content:
        type: string
      description:
        maxLength: 500
        type: string
      secret_key:
        maxLength: 100
        type: string
    required:
    - classification_level
    - content
    - secret_key
    type: object
  fceek_dev-pedia_backend_internal_models.CreateTokenRequest:
    properties:
      classification_level:
        maximum: 5
        minimum: 2
        type: integer
      description:
        maxLength: 500
        type: string
      expires_at:
        type: string
      name:
        maxLength: 100
        type: string
    required:
    - classification_level
    type: object
  fceek_dev-pedia_backend_internal_models.TokenResponse:
    properties:
      classification_level:
        type: integer
      created_at:
        type: string
      description:
        type: string
      expires_at:
        type: string
      id:
        type: string
      name:
        type: string
      status:
        type: string
      token:
        description: Only returned on creation
        type: string
    type: object
  fceek_dev-pedia_backend_internal_models.UpdateArticleRequest:
    properties:
      change_summary:
        maxLength: 500
        type: string
      classification_level:
        maximum: 5
        minimum: 1
        type: integer
      content:
        type: string
      full_path:
        type: string
      metadata:
        $ref: '#/definitions/fceek_dev-pedia_backend_internal_models.ArticleMetadata'
      parent_path:
        type: string
      secrets:
        description: 'New: replace all secrets with this list'
        items:
          $ref: '#/definitions/fceek_dev-pedia_backend_internal_models.CreateContentSecretRequest'
        type: array
      slug:
        maxLength: 100
        type: string
      status:
        allOf:
        - $ref: '#/definitions/fceek_dev-pedia_backend_internal_models.ArticleStatus'
        enum:
        - draft
        - published
        - archived
      tag_ids:
        items:
          type: string
        type: array
      title:
        maxLength: 200
        type: string
    type: object
  internal_handlers.ErrorResponse:
    properties:
      error:
        type: string
      message:
        type: string
    type: object
host: localhost:9001
info:
  contact:
    name: API Support
  description: '{DEV} Pedia'
  title: '{DEV} Pedia API'
  version: "1.0"
paths:
  /api/articles:
    get:
      description: List articles with optional filtering and pagination
      parameters:
      - description: Source type
        enum:
        - doc
        - git
        in: query
        name: source_type
        type: string
      - description: Parent path filter
        in: query
        name: parent_path
        type: string
      - description: Status filter
        enum:
        - draft
        - published
        - archived
        in: query
        name: status
        type: string
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 20
        description: Page size
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/fceek_dev-pedia_backend_internal_models.ArticleListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/internal_handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_handlers.ErrorResponse'
      security:
      - Bearer: []
      summary: List articles
      tags:
      - articles
    post:
      consumes:
      - application/json
      description: Create a new article with the given data
      parameters:
      - description: Article data
        in: body
        name: article
        required: true
        schema:
          $ref: '#/definitions/fceek_dev-pedia_backend_internal_models.CreateArticleRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/fceek_dev-pedia_backend_internal_models.Article'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/internal_handlers.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/internal_handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_handlers.ErrorResponse'
      security:
      - Bearer: []
      summary: Create a new article
      tags:
      - articles
  /api/articles/{source_type}/{id}:
    delete:
      description: Delete an article by ID
      parameters:
      - description: Source type
        enum:
        - doc
        - git
        in: path
        name: source_type
        required: true
        type: string
      - description: Article ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/internal_handlers.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/internal_handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/internal_handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_handlers.ErrorResponse'
      security:
      - Bearer: []
      summary: Delete article
      tags:
      - articles
    get:
      description: Get an article by its ID
      parameters:
      - description: Source type
        enum:
        - doc
        - git
        in: path
        name: source_type
        required: true
        type: string
      - description: Article ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/fceek_dev-pedia_backend_internal_models.ArticleWithTags'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/internal_handlers.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/internal_handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/internal_handlers.ErrorResponse'
      security:
      - Bearer: []
      summary: Get article by ID
      tags:
      - articles
    put:
      consumes:
      - application/json
      description: Update an existing article
      parameters:
      - description: Source type
        enum:
        - doc
        - git
        in: path
        name: source_type
        required: true
        type: string
      - description: Article ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated article data
        in: body
        name: article
        required: true
        schema:
          $ref: '#/definitions/fceek_dev-pedia_backend_internal_models.UpdateArticleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/fceek_dev-pedia_backend_internal_models.Article'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/internal_handlers.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/internal_handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/internal_handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_handlers.ErrorResponse'
      security:
      - Bearer: []
      summary: Update article
      tags:
      - articles
  /api/articles/by-path:
    get:
      description: Get an article by its full path
      parameters:
      - description: Source type
        enum:
        - doc
        - git
        in: query
        name: source_type
        required: true
        type: string
      - description: Full path
        in: query
        name: path
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/fceek_dev-pedia_backend_internal_models.ArticleWithTags'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/internal_handlers.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/internal_handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/internal_handlers.ErrorResponse'
      security:
      - Bearer: []
      summary: Get article by path
      tags:
      - articles
  /api/bootstrap:
    post:
      consumes:
      - application/json
      description: Creates the first 5-star token using God token from environment
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/fceek_dev-pedia_backend_internal_models.TokenResponse'
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - GodToken: []
      summary: Create bootstrap token
      tags:
      - tokens
  /api/me:
    get:
      description: Returns detailed information about the authenticated user including
        name, expiration, creator
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Get current user info
      tags:
      - tokens
  /api/tokens:
    get:
      description: Lists tokens that the authenticated user has access to view
      parameters:
      - description: 'Maximum number of tokens to return (default: 50, max: 100)'
        in: query
        name: limit
        type: integer
      - description: 'Number of tokens to skip (default: 0)'
        in: query
        name: offset
        type: integer
      - description: Filter by token status (active, revoked, expired)
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: List tokens
      tags:
      - tokens
    post:
      consumes:
      - application/json
      description: Creates a new token with specified classification level
      parameters:
      - description: Token creation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/fceek_dev-pedia_backend_internal_models.CreateTokenRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/fceek_dev-pedia_backend_internal_models.TokenResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Create new token
      tags:
      - tokens
  /api/tokens/{id}:
    delete:
      description: Revokes an active token, making it unusable
      parameters:
      - description: Token ID to revoke
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Revoke token
      tags:
      - tokens
  /api/tokens/{id}/name:
    get:
      description: Returns the name of a token identified by UUID (used for resolving
        creator names)
      parameters:
      - description: Token ID to get name for
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Get token name by ID
      tags:
      - tokens
  /api/tokens/stats:
    get:
      description: Returns current token count and maximum allowed tokens for the
        authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Get token statistics
      tags:
      - tokens
  /api/validate:
    get:
      description: Validates a token and returns its classification level and validity
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Validate token
      tags:
      - tokens
  /health:
    get:
      description: Check if the service is running
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Health check
      tags:
      - health
securityDefinitions:
  Bearer:
    description: Bearer token for regular authentication
    in: header
    name: Authorization
    type: apiKey
  GodToken:
    description: God token for bootstrap operations
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
